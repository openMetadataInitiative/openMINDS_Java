package org.openmetadatainitiative.openminds.v3.stimulation.stimulus;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonInclude;
import org.openmetadatainitiative.openminds.utils.*;
import java.util.function.Function;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import org.openmetadatainitiative.openminds.v3.controlledTerms.ElectricalStimulusType;
import org.openmetadatainitiative.openminds.v3.core.miscellaneous.QuantitativeValue;
import org.openmetadatainitiative.openminds.v3.stimulation.stimulus.intf.EphysStimulusDeliveredBy;
import org.openmetadatainitiative.openminds.v3.stimulation.stimulus.intf.EphysStimulusGeneratedBy;
import org.openmetadatainitiative.openminds.v3.stimulation.stimulus.intf.EphysStimulusSpecification;


import static org.openmetadatainitiative.openminds.v3.stimulation.stimulus.EphysStimulus.SEMANTIC_NAME;
/**
 * 
 *
 * ATTENTION! This is an autogenerated file based on the openMINDS schema - do not apply manual changes since they are going to be overwritten.
 */
@InstanceType(SEMANTIC_NAME)
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonInclude(JsonInclude.Include.NON_NULL)
@SuppressWarnings("unused")
public class EphysStimulus extends Instance implements org.openmetadatainitiative.openminds.OpenMINDS.V3.Entity{
    public static final String SEMANTIC_NAME = "https://openminds.ebrains.eu/stimulation/EphysStimulus";

    @JsonIgnore
    public Reference<EphysStimulus> getReference() {
        return doGetReference();
    }

    public static Reference<EphysStimulus> reference(String instanceId) {
        return new Reference<>(new InstanceId(instanceId));
    }

    /** For deserialization **/
    private EphysStimulus() {
        this(null);
    }

    private EphysStimulus(LocalId localId ) {
        super(localId, SEMANTIC_NAME);
    }

    

    
    public class Builder implements org.openmetadatainitiative.openminds.utils.Builder<EphysStimulus>{
        public Builder deliveredBy(Reference<? extends EphysStimulusDeliveredBy> deliveredBy) { EphysStimulus.this.deliveredBy = deliveredBy; return this; }
        public Builder description(String description) { EphysStimulus.this.description = description; return this; }
        public Builder epoch(Function<QuantitativeValue.EmbeddedBuilder, QuantitativeValue> epoch) { EphysStimulus.this.epoch = epoch.apply(QuantitativeValue.createEmbedded()); return this; }
        public Builder generatedBy(Reference<? extends EphysStimulusGeneratedBy> generatedBy) { EphysStimulus.this.generatedBy = generatedBy; return this; }
        public Builder internalIdentifier(String internalIdentifier) { EphysStimulus.this.internalIdentifier = internalIdentifier; return this; }
        public Builder lookupLabel(String lookupLabel) { EphysStimulus.this.lookupLabel = lookupLabel; return this; }
        public Builder specification(List<Reference<? extends EphysStimulusSpecification>> specification) { EphysStimulus.this.specification = specification; return this; }
        public Builder type(Reference<ElectricalStimulusType> type) { EphysStimulus.this.type = type; return this; }
        

        public EphysStimulus build(OpenMINDSContext context) {
            EphysStimulus.super.build(context);
            return EphysStimulus.this;
        }
    }

    public static EphysStimulus.Builder create(LocalId localId){
        return new EphysStimulus(localId).new Builder();
    }

    public EphysStimulus.Builder copy(){
        return ParsingUtils.OBJECT_MAPPER.convertValue(this, EphysStimulus.class).new Builder();
    }
    

   @JsonProperty(value = "https://openminds.ebrains.eu/vocab/deliveredBy")
    private Reference<? extends EphysStimulusDeliveredBy> deliveredBy;
    
    public Reference<? extends EphysStimulusDeliveredBy> getDeliveredBy() {
       return this.deliveredBy;
    }

    @JsonProperty(value = "https://openminds.ebrains.eu/vocab/description")
    private String description;
    
    /**
    * Longer statement or account giving the characteristics of someone or something.
    */
    public String getDescription() {
       return this.description;
    }

    @JsonProperty(value = "https://openminds.ebrains.eu/vocab/epoch")
    private QuantitativeValue epoch;
    
    public QuantitativeValue getEpoch() {
       return this.epoch;
    }

    @JsonProperty(value = "https://openminds.ebrains.eu/vocab/generatedBy")
    private Reference<? extends EphysStimulusGeneratedBy> generatedBy;
    
    public Reference<? extends EphysStimulusGeneratedBy> getGeneratedBy() {
       return this.generatedBy;
    }

    @JsonProperty(value = "https://openminds.ebrains.eu/vocab/internalIdentifier")
    private String internalIdentifier;
    
    /**
    * Term or code that identifies someone or something within a particular product.
    */
    public String getInternalIdentifier() {
       return this.internalIdentifier;
    }

    @JsonProperty(value = "https://openminds.ebrains.eu/vocab/lookupLabel")
    private String lookupLabel;
    
    public String getLookupLabel() {
       return this.lookupLabel;
    }

    @JsonProperty(value = "https://openminds.ebrains.eu/vocab/specification")
    private List<Reference<? extends EphysStimulusSpecification>> specification;
    
    /**
    * Detailed and precise presentation of, or proposal for something.
    */
    public List<Reference<? extends EphysStimulusSpecification>> getSpecification() {
       return this.specification;
    }

    @JsonProperty(value = "https://openminds.ebrains.eu/vocab/type")
    private Reference<ElectricalStimulusType> type;
    
    /**
    * Distinct class to which a group of entities or concepts with similar characteristics or attributes belong to.
    */
    public Reference<ElectricalStimulusType> getType() {
       return this.type;
    }

 

}