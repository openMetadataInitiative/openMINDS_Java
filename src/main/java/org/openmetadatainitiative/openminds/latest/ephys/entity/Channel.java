package org.openmetadatainitiative.openminds.latest.ephys.entity;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonInclude;
import org.openmetadatainitiative.openminds.utils.*;
import java.util.function.Function;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import org.openmetadatainitiative.openminds.latest.controlledTerms.UnitOfMeasurement;


import static org.openmetadatainitiative.openminds.latest.ephys.entity.Channel.SEMANTIC_NAME;
/**
 * 
 *
 * ATTENTION! This is an autogenerated file based on the openMINDS schema - do not apply manual changes since they are going to be overwritten.
 */
@InstanceType(SEMANTIC_NAME)
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonInclude(JsonInclude.Include.NON_NULL)
@SuppressWarnings("unused")
public class Channel extends Instance implements org.openmetadatainitiative.openminds.OpenMINDS.Latest.Entity{
    public static final String SEMANTIC_NAME = "https://openminds.om-i.org/types/Channel";

    @JsonIgnore
    public Reference<Channel> getReference() {
        return doGetReference();
    }

    public static Reference<Channel> reference(String instanceId) {
        return new Reference<>(new InstanceId(instanceId));
    }

    /** For deserialization **/
    private Channel() {
        this(null);
    }

    private Channel(LocalId localId ) {
        super(localId, SEMANTIC_NAME);
    }

    
    public class EmbeddedBuilder {

        public EmbeddedBuilder internalIdentifier(String internalIdentifier) { Channel.this.internalIdentifier = internalIdentifier; return this; }
        public EmbeddedBuilder unit(Reference<UnitOfMeasurement> unit) { Channel.this.unit = unit; return this; }
        

        public Channel build(){
            return Channel.this;
        }
    }

    public static Channel.EmbeddedBuilder createEmbedded(){
        return new Channel(null).new EmbeddedBuilder();
    }
    

    

   @JsonProperty(value = "https://openminds.om-i.org/props/internalIdentifier")
    private String internalIdentifier;
    
    /**
    * Term or code that identifies someone or something within a particular product.
    */
    public String getInternalIdentifier() {
       return this.internalIdentifier;
    }

    @JsonProperty(value = "https://openminds.om-i.org/props/unit")
    private Reference<UnitOfMeasurement> unit;
    
    /**
    * Determinate quantity adopted as a standard of measurement.
    */
    public Reference<UnitOfMeasurement> getUnit() {
       return this.unit;
    }

 

}