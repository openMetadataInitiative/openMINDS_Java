package org.openmetadatainitiative.openminds.latest.core.data;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonInclude;
import org.openmetadatainitiative.openminds.utils.*;
import java.util.function.Function;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import org.openmetadatainitiative.openminds.latest.core.data.intf.CopyrightHolder;


import static org.openmetadatainitiative.openminds.latest.core.data.Copyright.SEMANTIC_NAME;
/**
 * Structured information on the copyright.
 *
 * ATTENTION! This is an autogenerated file based on the openMINDS schema - do not apply manual changes since they are going to be overwritten.
 */
@InstanceType(SEMANTIC_NAME)
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonInclude(JsonInclude.Include.NON_NULL)
@SuppressWarnings("unused")
public class Copyright extends Instance implements org.openmetadatainitiative.openminds.OpenMINDS.Latest.Entity{
    public static final String SEMANTIC_NAME = "https://openminds.om-i.org/types/Copyright";

    @JsonIgnore
    public Reference<Copyright> getReference() {
        return doGetReference();
    }

    public static Reference<Copyright> reference(String instanceId) {
        return new Reference<>(new InstanceId(instanceId));
    }

    /** For deserialization **/
    private Copyright() {
        this(null);
    }

    private Copyright(LocalId localId ) {
        super(localId, SEMANTIC_NAME);
    }

    
    public class EmbeddedBuilder {

        public EmbeddedBuilder holder(List<Reference<? extends CopyrightHolder>> holder) { Copyright.this.holder = holder; return this; }
        public EmbeddedBuilder year(List<String> year) { Copyright.this.year = year; return this; }
        

        public Copyright build(){
            return Copyright.this;
        }
    }

    public static Copyright.EmbeddedBuilder createEmbedded(){
        return new Copyright(null).new EmbeddedBuilder();
    }
    

    

   @JsonProperty(value = "https://openminds.om-i.org/props/holder")
    private List<Reference<? extends CopyrightHolder>> holder;
    
    /**
    * Legal person in possession of something.
    */
    public List<Reference<? extends CopyrightHolder>> getHolder() {
       return this.holder;
    }

    @JsonProperty(value = "https://openminds.om-i.org/props/year")
    private List<String> year;
    
    /**
    * Cycle in the Gregorian calendar specified by a number and comprised of 365 or 366 days divided into 12 months beginning with January and ending with December.
    */
    public List<String> getYear() {
       return this.year;
    }

 

}