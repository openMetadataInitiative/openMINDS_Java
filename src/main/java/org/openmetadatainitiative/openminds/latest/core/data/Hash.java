package org.openmetadatainitiative.openminds.latest.core.data;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import org.openmetadatainitiative.openminds.utils.*;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;



import static org.openmetadatainitiative.openminds.latest.core.data.Hash.SEMANTIC_NAME;
/**
 * Structured information on a hash.
 *
 * ATTENTION! This is an autogenerated file based on the openMINDS schema - do not apply manual changes since they are going to be overwritten.
 */
@InstanceType(SEMANTIC_NAME)
@JsonIgnoreProperties(ignoreUnknown = true)
public class Hash extends Instance {
    static final String SEMANTIC_NAME = "https://openminds.ebrains.eu/core/Hash";

    @JsonIgnore
    public Reference<Hash> getReference() {
        return doGetReference();
    }

    public static Reference<Hash> reference(String instanceId) {
        return new Reference<>(new InstanceId(instanceId));
    }

    private Hash(LocalId localId ) {
        super(localId);
    }


    public class Builder implements org.openmetadatainitiative.openminds.utils.Builder<Hash>{
        
        public Builder algorithm(String algorithm) { Hash.this.algorithm = algorithm; return this; }
        
        public Builder digest(String digest) { Hash.this.digest = digest; return this; }
        

        public Hash build(OpenMINDSContext context) {
            if (Hash.this.id == null) {
                Hash.this.id = InstanceId.withPrefix(UUID.randomUUID().toString(), context.idPrefix());
            }
            Hash.this.type = SEMANTIC_NAME;
            return Hash.this;
        }
    }

   @JsonProperty(value = "https://openminds.ebrains.eu/vocab/algorithm")
    private String algorithm;
    
    /**
    * Procedure for solving a mathematical problem in a finite number of steps. Can involve repetition of an operation.
    */
    public String getAlgorithm() {
       return this.algorithm;
    }

    @JsonProperty(value = "https://openminds.ebrains.eu/vocab/digest")
    private String digest;
    
    /**
    * Summation or condensation of a body of information.
    */
    public String getDigest() {
       return this.digest;
    }

 
    public static Hash.Builder create(LocalId localId){
        return new Hash(localId).new Builder();
    }

    public Hash.Builder copy(){
        return ParsingUtils.OBJECT_MAPPER.convertValue(this, Hash.class).new Builder();
    }
}