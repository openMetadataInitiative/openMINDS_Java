package org.openmetadatainitiative.openminds.latest.core.research;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonInclude;
import org.openmetadatainitiative.openminds.utils.*;
import java.util.function.Function;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;



import static org.openmetadatainitiative.openminds.latest.core.research.StringProperty.SEMANTIC_NAME;
/**
 * 
 *
 * ATTENTION! This is an autogenerated file based on the openMINDS schema - do not apply manual changes since they are going to be overwritten.
 */
@InstanceType(SEMANTIC_NAME)
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonInclude(JsonInclude.Include.NON_NULL)
@SuppressWarnings("unused")
public class StringProperty extends Instance implements org.openmetadatainitiative.openminds.OpenMINDS.Latest.Entity, org.openmetadatainitiative.openminds.latest.core.research.intf.PropertyValueListPropertyValuePair{
    public static final String SEMANTIC_NAME = "https://openminds.om-i.org/types/StringProperty";

    @JsonIgnore
    public Reference<StringProperty> getReference() {
        return doGetReference();
    }

    public static Reference<StringProperty> reference(String instanceId) {
        return new Reference<>(new InstanceId(instanceId));
    }

    /** For deserialization **/
    private StringProperty() {
        this(null);
    }

    private StringProperty(LocalId localId ) {
        super(localId, SEMANTIC_NAME);
    }

    
    public class EmbeddedBuilder {

        public EmbeddedBuilder name(String name) { StringProperty.this.name = name; return this; }
        public EmbeddedBuilder value(String value) { StringProperty.this.value = value; return this; }
        

        public StringProperty build(){
            return StringProperty.this;
        }
    }

    public static StringProperty.EmbeddedBuilder createEmbedded(){
        return new StringProperty(null).new EmbeddedBuilder();
    }
    

    

   @JsonProperty(value = "https://openminds.om-i.org/props/name")
    private String name;
    
    /**
    * Word or phrase that constitutes the distinctive designation of a being or thing.
    */
    public String getName() {
       return this.name;
    }

    @JsonProperty(value = "https://openminds.om-i.org/props/value")
    private String value;
    
    /**
    * Entry for a property.
    */
    public String getValue() {
       return this.value;
    }

 

}