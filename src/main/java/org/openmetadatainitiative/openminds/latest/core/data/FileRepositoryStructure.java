package org.openmetadatainitiative.openminds.latest.core.data;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonInclude;
import org.openmetadatainitiative.openminds.utils.*;
import java.util.function.Function;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import org.openmetadatainitiative.openminds.latest.core.data.FilePathPattern;


import static org.openmetadatainitiative.openminds.latest.core.data.FileRepositoryStructure.SEMANTIC_NAME;
/**
 * 
 *
 * ATTENTION! This is an autogenerated file based on the openMINDS schema - do not apply manual changes since they are going to be overwritten.
 */
@InstanceType(SEMANTIC_NAME)
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonInclude(JsonInclude.Include.NON_NULL)
@SuppressWarnings("unused")
public class FileRepositoryStructure extends Instance implements org.openmetadatainitiative.openminds.OpenMINDS.Latest.Entity{
    public static final String SEMANTIC_NAME = "https://openminds.om-i.org/types/FileRepositoryStructure";

    @JsonIgnore
    public Reference<FileRepositoryStructure> getReference() {
        return doGetReference();
    }

    public static Reference<FileRepositoryStructure> reference(String instanceId) {
        return new Reference<>(new InstanceId(instanceId));
    }

    /** For deserialization **/
    private FileRepositoryStructure() {
        this(null);
    }

    private FileRepositoryStructure(LocalId localId ) {
        super(localId, SEMANTIC_NAME);
    }

    

    
    public class Builder implements org.openmetadatainitiative.openminds.utils.Builder<FileRepositoryStructure>{
        public Builder filePathPattern(List<Function<FilePathPattern.EmbeddedBuilder, FilePathPattern>> filePathPattern) { FileRepositoryStructure.this.filePathPattern = filePathPattern.stream().map(b -> b.apply(FilePathPattern.createEmbedded())).toList(); return this; }
        public Builder lookupLabel(String lookupLabel) { FileRepositoryStructure.this.lookupLabel = lookupLabel; return this; }
        

        public FileRepositoryStructure build(OpenMINDSContext context) {
            FileRepositoryStructure.super.build(context);
            return FileRepositoryStructure.this;
        }
    }

    public static FileRepositoryStructure.Builder create(LocalId localId){
        return new FileRepositoryStructure(localId).new Builder();
    }

    public FileRepositoryStructure.Builder copy(){
        return ParsingUtils.OBJECT_MAPPER.convertValue(this, FileRepositoryStructure.class).new Builder();
    }
    

   @JsonProperty(value = "https://openminds.om-i.org/props/filePathPattern")
    private List<FilePathPattern> filePathPattern;
    
    public List<FilePathPattern> getFilePathPattern() {
       return this.filePathPattern;
    }

    @JsonProperty(value = "https://openminds.om-i.org/props/lookupLabel")
    private String lookupLabel;
    
    public String getLookupLabel() {
       return this.lookupLabel;
    }

 

}