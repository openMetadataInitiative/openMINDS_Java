package org.openmetadatainitiative.openminds.v4.core.actors;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonInclude;
import org.openmetadatainitiative.openminds.utils.*;
import java.util.function.Function;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import org.openmetadatainitiative.openminds.v4.controlledTerms.ContributionType;
import org.openmetadatainitiative.openminds.v4.core.actors.intf.ContributionContributor;


import static org.openmetadatainitiative.openminds.v4.core.actors.Contribution.SEMANTIC_NAME;
/**
 * Structured information on the contribution made to a research product.
 *
 * ATTENTION! This is an autogenerated file based on the openMINDS schema - do not apply manual changes since they are going to be overwritten.
 */
@InstanceType(SEMANTIC_NAME)
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonInclude(JsonInclude.Include.NON_NULL)
@SuppressWarnings("unused")
public class Contribution extends Instance implements org.openmetadatainitiative.openminds.OpenMINDS.V4.Entity{
    public static final String SEMANTIC_NAME = "https://openminds.om-i.org/types/Contribution";

    @JsonIgnore
    public Reference<Contribution> getReference() {
        return doGetReference();
    }

    public static Reference<Contribution> reference(String instanceId) {
        return new Reference<>(new InstanceId(instanceId));
    }

    /** For deserialization **/
    private Contribution() {
        this(null);
    }

    private Contribution(LocalId localId ) {
        super(localId, SEMANTIC_NAME);
    }

    
    public class EmbeddedBuilder {

        public EmbeddedBuilder contributor(Reference<? extends ContributionContributor> contributor) { Contribution.this.contributor = contributor; return this; }
        public EmbeddedBuilder type(List<Reference<ContributionType>> type) { Contribution.this.type = type; return this; }
        

        public Contribution build(){
            return Contribution.this;
        }
    }

    public static Contribution.EmbeddedBuilder createEmbedded(){
        return new Contribution(null).new EmbeddedBuilder();
    }
    

    

   @JsonProperty(value = "https://openminds.om-i.org/props/contributor")
    private Reference<? extends ContributionContributor> contributor;
    
    /**
    * Legal person that gave or supplied something as a part or share.
    */
    public Reference<? extends ContributionContributor> getContributor() {
       return this.contributor;
    }

    @JsonProperty(value = "https://openminds.om-i.org/props/type")
    private List<Reference<ContributionType>> type;
    
    /**
    * Distinct class to which a group of entities or concepts with similar characteristics or attributes belong to.
    */
    public List<Reference<ContributionType>> getType() {
       return this.type;
    }

 

}